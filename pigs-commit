#!/bin/dash

current_path=$(pwd)
PATH="$PATH:${current_path}"
if [ ! -d ".pig" ]
then
	echo "$0: error: pigs repository directory .pig not found"
	exit 1
fi

if [ "$#" -gt 3 ]
then
	echo "usage:$0 [-a] -m commit-message"
	exit 1
fi

message_flag=0
add_flag=0
message=""
commit_id=0
check_m_flag="-m"
check_a_flag="-a"

branch=$(cat ".pig/HEAD")

#CHECK COMMIT COMMAND
for input in "$@"
do
	if [ "${input}" = "${check_m_flag}" ]
	then
		message_flag=1
	elif [ "${input}" = "${check_a_flag}" ]
	then
		add_flag=1
		if [ "${message_flag}" -eq 1 ]
		then
			message_flag=0
		fi
	elif [ "${message_flag}" -eq 1 ]
	then
		message="${input}"
		message_flag=2
	else
		echo "usage:$0 [-a] -m commit-message"
		exit 1
	fi
done

if [ "${message_flag}" -ne 2 ]
then 
	echo "usage:$0 [-a] -m commit-message"
	exit 1
fi

index_update=$(mktemp)
trap 'rm ${index_update}' INT HUP QUIT TERM EXIT

if [ "${add_flag}" -eq 1 ]
then
	 for file in .pig/object/file/*
	 do
	 	file_name=$(basename "${file}")
	 	pigs-add "${file_name}"
	 done
fi

#CORRECT INDEX
for file in .pig/object/file/*
do
	file_name=$(basename "${file}")
	index_flag=0
	while IFS= read -r index_file
	do
		if [ "${file_name}" = "${index_file}" ]
		then
			index_flag=1
			break
		fi
	done < ".pig/index" 
	if [ "${index_flag}" -eq 0 ]
	then
		rm -f "${file}"
	fi
done


#CHECK LATEST COMMIT
commit_id=0
latest_commit_id=0
while test -d ".pig/object/commit/${commit_id}"
do
	is_branch_in_commit=$(grep "branch: ${branch}" ".pig/object/commit/${commit_id}/commit_info")
	if [ -n "${is_branch_in_commit}" ] && [ "${latest_commit_id}" -lt "${commit_id}" ]
	then
		latest_commit_id="${commit_id}"
	fi
	commit_id=$((commit_id+1))
done


#CHECK FILE CHANGE (1=CHANGE,0=NOT CHANGE)
file_change_flag=0
if [ "${commit_id}" -ne 0 ]
then
	old_commit_id="${latest_commit_id}"
	count_file=$(find ".pig/object/file" -type f | wc -l)
	if [ "${count_file}" -gt 0 ]
	then
		for file in .pig/object/file/*
		do
			file_name=$(basename "${file}")
			if test -f ".pig/object/commit/${old_commit_id}/${file_name}"
			then
				DIFF=$(diff "${file}" ".pig/object/commit/${old_commit_id}/${file_name}")
				if [ -n "${DIFF}" ]
				then
					file_change_flag=1
					break
				fi
			else
				file_change_flag=1
				break
			fi
		done
	fi

	count_file=$(find ".pig/object/commit/${old_commit_id}" -type f | wc -l)
	if [ "${count_file}" -gt 0 ]
	then
		for file in .pig/object/commit/"${old_commit_id}"/*
		do
			file_name=$(basename "${file}")
			if [ "${file_name}" = "commit_info" ]
			then
				continue
			fi
			if [ ! -f ".pig/object/file/${file_name}" ]
			then 
				file_change_flag=1
				break
			fi
		done
	fi


	if [ "${file_change_flag}" -eq 0 ]
	then 
		echo "nothing to commit"
		exit 0
	fi
fi

#ADD FILE TO NEW COMMIT
timestamp=$(date +%s)
mkdir ".pig/object/commit/${commit_id}"
count_file=$(find ".pig/object/file" -type f | wc -l)
if [ "${count_file}" -gt 0 ]
then
	cp -R ".pig/object/file"/* ".pig/object/commit/${commit_id}"
	cp -Rn ".pig/object/file"/* "."
fi
echo "${commit_id}|${timestamp}|${message}" > ".pig/object/commit/${commit_id}/commit_info"
echo "branch: ${branch}" >> ".pig/object/commit/${commit_id}/commit_info"
echo "Committed as commit ${commit_id}"
exit 0
